# Generated by Django 4.2.5 on 2024-05-19 18:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("image", models.URLField(blank=True)),
                ("phone_number", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "active"),
                            ("deactivated", "deactivated"),
                            ("restricted", "restricted"),
                        ],
                        default="active",
                        max_length=15,
                    ),
                ),
                (
                    "u_type",
                    models.CharField(
                        choices=[
                            ("host", "host"),
                            ("guest", "guest"),
                            ("system", "system"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("super_admin", "super_admin"),
                            ("admin", "admin"),
                            ("coordinator", "coordinator"),
                        ],
                        max_length=15,
                    ),
                ),
                ("is_phone_verified", models.BooleanField(default=False)),
                ("is_email_verified", models.BooleanField(default=False)),
                (
                    "identity_verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("verified", "verified"),
                            ("not_verified", "not_verified"),
                            ("rejected", "rejected"),
                        ],
                        default="not_verified",
                        max_length=15,
                    ),
                ),
                (
                    "identity_verification_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("passport", "passport"),
                            ("nid", "nid"),
                            ("driving_license", "driving_license"),
                        ],
                        max_length=15,
                    ),
                ),
                ("identity_verification_images", models.JSONField(default=dict)),
                ("identity_verification_reject_reason", models.TextField(blank=True)),
                ("country_code", models.CharField(default="BD", max_length=10)),
                ("avg_rating", models.FloatField(default=0)),
                ("total_rating_sum", models.FloatField(default=0)),
                ("total_rating_count", models.PositiveIntegerField(default=0)),
                ("total_property", models.PositiveIntegerField(default=0)),
                ("total_sell_amount", models.FloatField(default=0)),
                (
                    "wishlist_listings",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveBigIntegerField(),
                        blank=True,
                        size=None,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "1. User",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("school", models.CharField(blank=True, max_length=200)),
                ("work", models.CharField(blank=True, max_length=200)),
                ("address", models.CharField(blank=True, max_length=200)),
                ("latitude", models.FloatField(default=0)),
                ("longitude", models.FloatField(default=0)),
                ("bio", models.TextField(blank=True)),
                (
                    "languages",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        size=None,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "2. User Profile",
            },
        ),
    ]
