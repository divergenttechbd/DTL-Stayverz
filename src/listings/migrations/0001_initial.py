# Generated by Django 4.2.5 on 2024-05-19 18:00

import configurations.data
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Amenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                (
                    "a_type",
                    models.CharField(
                        choices=[
                            ("entire_place", "entire_place"),
                            ("stand_out", "stand_out"),
                            ("safety", "safety"),
                        ],
                        max_length=20,
                    ),
                ),
                ("icon", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Listing Amenity",
                "verbose_name_plural": "2. Listing Amenities",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("icon", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "Listing Category",
                "verbose_name_plural": "1. Listing Category",
            },
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("unique_id", models.UUIDField(unique=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("price", models.FloatField(default=0)),
                ("cover_photo", models.URLField(blank=True)),
                ("images", models.JSONField(default=list)),
                (
                    "place_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("entire_place", "entire_place"),
                            ("single_room", "single_room"),
                            ("shared_room", "shared_room"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "in_progress"),
                            ("unpublished", "unpublished"),
                            ("published", "published"),
                            ("restricted", "restricted"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("verified", "verified"),
                            ("unverified", "unverified"),
                        ],
                        default="unverified",
                        max_length=20,
                    ),
                ),
                ("guest_count", models.PositiveIntegerField(default=0)),
                ("bedroom_count", models.PositiveIntegerField(default=0)),
                ("bed_count", models.PositiveIntegerField(default=0)),
                ("bathroom_count", models.PositiveIntegerField(default=0)),
                ("minimum_nights", models.PositiveIntegerField(default=1)),
                ("maximum_nights", models.PositiveIntegerField(default=30)),
                ("address", models.CharField(blank=True, max_length=200)),
                ("pet_allowed", models.BooleanField(default=False)),
                ("event_allowed", models.BooleanField(default=False)),
                ("smoking_allowed", models.BooleanField(default=False)),
                ("media_allowed", models.BooleanField(default=False)),
                ("unmarried_couples_allowed", models.BooleanField(default=False)),
                (
                    "cancellation_policy",
                    models.JSONField(
                        default=configurations.data.default_cancellation_policy
                    ),
                ),
                ("check_in", models.TimeField(default="12:00")),
                ("check_out", models.TimeField(default="11:00")),
                ("avg_rating", models.FloatField(default=0)),
                ("total_rating_sum", models.FloatField(default=0)),
                ("total_rating_count", models.PositiveIntegerField(default=0)),
                ("total_booking_count", models.PositiveIntegerField(default=0)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        default=django.contrib.gis.geos.point.Point(0, 0), srid=4326
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="listings.category",
                    ),
                ),
                (
                    "host",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing",
                "verbose_name_plural": "3. Listing",
            },
        ),
        migrations.CreateModel(
            name="ListingCalendar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("base_price", models.FloatField()),
                ("custom_price", models.FloatField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_blocked", models.BooleanField(default=False)),
                ("is_booked", models.BooleanField(default=False)),
                ("booking_data", models.JSONField(default=dict)),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="listings.listing",
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing Calendar",
                "verbose_name_plural": "5. Listing Calendar",
            },
        ),
        migrations.CreateModel(
            name="ListingAmenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "amenity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="listings.amenity",
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="listings.listing",
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing Amenity",
                "verbose_name_plural": "4. Listing Amenity",
            },
        ),
    ]
